// Code generated by ent, DO NOT EDIT.

package api

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the api type in the database.
	Label = "api"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldProtocol holds the string denoting the protocol field in the database.
	FieldProtocol = "protocol"
	// FieldServiceName holds the string denoting the service_name field in the database.
	FieldServiceName = "service_name"
	// FieldMethod holds the string denoting the method field in the database.
	FieldMethod = "method"
	// FieldMethodName holds the string denoting the method_name field in the database.
	FieldMethodName = "method_name"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldExported holds the string denoting the exported field in the database.
	FieldExported = "exported"
	// FieldPathPrefix holds the string denoting the path_prefix field in the database.
	FieldPathPrefix = "path_prefix"
	// FieldDomains holds the string denoting the domains field in the database.
	FieldDomains = "domains"
	// FieldDepracated holds the string denoting the depracated field in the database.
	FieldDepracated = "depracated"
	// Table holds the table name of the api in the database.
	Table = "apis"
)

// Columns holds all SQL columns for api fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldProtocol,
	FieldServiceName,
	FieldMethod,
	FieldMethodName,
	FieldPath,
	FieldExported,
	FieldPathPrefix,
	FieldDomains,
	FieldDepracated,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/NpoolPlatform/basal-middleware/pkg/db/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultProtocol holds the default value on creation for the "protocol" field.
	DefaultProtocol string
	// DefaultServiceName holds the default value on creation for the "service_name" field.
	DefaultServiceName string
	// DefaultMethod holds the default value on creation for the "method" field.
	DefaultMethod string
	// DefaultMethodName holds the default value on creation for the "method_name" field.
	DefaultMethodName string
	// DefaultPath holds the default value on creation for the "path" field.
	DefaultPath string
	// DefaultExported holds the default value on creation for the "exported" field.
	DefaultExported bool
	// DefaultPathPrefix holds the default value on creation for the "path_prefix" field.
	DefaultPathPrefix string
	// DefaultDomains holds the default value on creation for the "domains" field.
	DefaultDomains []string
	// DefaultDepracated holds the default value on creation for the "depracated" field.
	DefaultDepracated bool
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
